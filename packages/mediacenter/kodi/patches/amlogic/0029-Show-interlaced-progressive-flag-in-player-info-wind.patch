From 5117a7ad65673533632799503b8d1966a1ad1dbe Mon Sep 17 00:00:00 2001
From: afl1 <afl2001@gmail.com>
Date: Wed, 7 Aug 2019 04:29:25 +0100
Subject: [PATCH 29/43] Show interlaced/progressive flag in player info window

Patch: kodi-ce-106-show-interlace-progressive-flag-in-player-info.patch
---
 addons/skin.estouchy/xml/DialogPlayerProcessInfo.xml |  2 +-
 addons/skin.estuary/xml/DialogPlayerProcessInfo.xml  |  2 +-
 xbmc/GUIInfoManager.cpp                              |  3 ++-
 xbmc/cores/DataCacheCore.cpp                         | 14 ++++++++++++++
 xbmc/cores/DataCacheCore.h                           |  3 +++
 xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp       |  3 +++
 xbmc/guilib/guiinfo/GUIInfoLabels.h                  |  1 +
 xbmc/guilib/guiinfo/PlayerGUIInfo.cpp                |  3 +++
 8 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/addons/skin.estouchy/xml/DialogPlayerProcessInfo.xml b/addons/skin.estouchy/xml/DialogPlayerProcessInfo.xml
index fe72d2d..9022bc3 100644
--- a/addons/skin.estouchy/xml/DialogPlayerProcessInfo.xml
+++ b/addons/skin.estouchy/xml/DialogPlayerProcessInfo.xml
@@ -165,7 +165,7 @@
 					<width>1000</width>
 					<height>30</height>
 					<aligny>bottom</aligny>
-					<label>$INFO[Player.Process(videowidth),[COLOR blue]$LOCALIZE[38031]:[/COLOR] ,x]$INFO[Player.Process(videoheight),, px]$INFO[Player.Process(videodar),$COMMA , AR]$INFO[Player.Process(videofps),$COMMA , FPS]</label>
+					<label>$INFO[Player.Process(videowidth),[COLOR blue]$LOCALIZE[38031]:[/COLOR] ,x]$INFO[Player.Process(videoheight),,]$INFO[Player.Process(videointerlace),,]$INFO[Player.Process(videodar),$COMMA , AR]$INFO[Player.Process(videofps),$COMMA , FPS]</label>
 					<font>font25</font>
 					<shadowcolor>black</shadowcolor>
 					<visible>Player.HasVideo</visible>
diff --git a/addons/skin.estuary/xml/DialogPlayerProcessInfo.xml b/addons/skin.estuary/xml/DialogPlayerProcessInfo.xml
index cbfd2d2..d7f1bc6 100644
--- a/addons/skin.estuary/xml/DialogPlayerProcessInfo.xml
+++ b/addons/skin.estuary/xml/DialogPlayerProcessInfo.xml
@@ -163,7 +163,7 @@
 					<width>1600</width>
 					<height>50</height>
 					<aligny>bottom</aligny>
-					<label>$INFO[Player.Process(videowidth),[COLOR button_focus]$LOCALIZE[38031]:[/COLOR] ,x]$INFO[Player.Process(videoheight),, px]$INFO[Player.Process(videodar),$COMMA , AR]$INFO[Player.Process(videofps),$COMMA , FPS]$INFO[VideoPlayer.VideoBitrate,$COMMA , kb/s]</label>
+					<label>$INFO[Player.Process(videowidth),[COLOR button_focus]$LOCALIZE[38031]:[/COLOR] ,x]$INFO[Player.Process(videoheight),,]$INFO[Player.Process(videointerlace),,]$INFO[Player.Process(videodar),$COMMA , AR]$INFO[Player.Process(videofps),$COMMA , FPS]$INFO[VideoPlayer.VideoBitrate,$COMMA , kb/s]</label>
 					<font>font14</font>
 					<shadowcolor>black</shadowcolor>
 					<visible>Player.HasVideo</visible>
diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 8d45a4a..936982c 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -909,7 +909,8 @@ const infomap player_process[] =
   { "audiodecoder", PLAYER_PROCESS_AUDIODECODER },
   { "audiochannels", PLAYER_PROCESS_AUDIOCHANNELS },
   { "audiosamplerate", PLAYER_PROCESS_AUDIOSAMPLERATE },
-  { "audiobitspersample", PLAYER_PROCESS_AUDIOBITSPERSAMPLE }
+  { "audiobitspersample", PLAYER_PROCESS_AUDIOBITSPERSAMPLE },
+  { "videointerlace", PLAYER_PROCESS_VIDEOINTERLACE }
 };
 
 /// \page modules__infolabels_boolean_conditions
diff --git a/xbmc/cores/DataCacheCore.cpp b/xbmc/cores/DataCacheCore.cpp
index 3e1f1f9..405eb21 100644
--- a/xbmc/cores/DataCacheCore.cpp
+++ b/xbmc/cores/DataCacheCore.cpp
@@ -159,6 +159,20 @@ float CDataCacheCore::GetVideoFps()
   return m_playerVideoInfo.fps;
 }
 
+void CDataCacheCore::SetVideoInterlaced(bool interlaced)
+{
+  CSingleLock lock(m_videoPlayerSection);
+
+  m_videoIsInterlaced = interlaced;
+}
+
+bool CDataCacheCore::GetVideoInterlaced()
+{
+  CSingleLock lock(m_videoPlayerSection);
+
+  return m_videoIsInterlaced;
+}
+
 void CDataCacheCore::SetVideoDAR(float dar)
 {
   CSingleLock lock(m_videoPlayerSection);
diff --git a/xbmc/cores/DataCacheCore.h b/xbmc/cores/DataCacheCore.h
index 25bb74f..ab44c92 100644
--- a/xbmc/cores/DataCacheCore.h
+++ b/xbmc/cores/DataCacheCore.h
@@ -40,6 +40,8 @@ public:
   float GetVideoFps();
   void SetVideoDAR(float dar);
   float GetVideoDAR();
+  void SetVideoInterlaced(bool interlaced);
+  bool GetVideoInterlaced();
 
   // player audio info
   void SetAudioDecoderName(std::string name);
@@ -146,6 +148,7 @@ protected:
 
   CCriticalSection m_stateSection;
   bool m_playerStateChanged = false;
+  bool m_videoIsInterlaced = false;
   struct SStateInfo
   {
     bool m_stateSeeking;
diff --git a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
index e8d9023..90500c2 100644
--- a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
+++ b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
@@ -223,6 +223,9 @@ void CProcessInfo::SetVideoInterlaced(bool interlaced)
   CSingleLock lock(m_videoCodecSection);
 
   m_videoIsInterlaced = interlaced;
+
+  if (m_dataCache)
+    m_dataCache->SetVideoInterlaced(interlaced);
 }
 
 bool CProcessInfo::GetVideoInterlaced()
diff --git a/xbmc/guilib/guiinfo/GUIInfoLabels.h b/xbmc/guilib/guiinfo/GUIInfoLabels.h
index d891c01..110bbc8 100644
--- a/xbmc/guilib/guiinfo/GUIInfoLabels.h
+++ b/xbmc/guilib/guiinfo/GUIInfoLabels.h
@@ -666,6 +666,7 @@
 #define PLAYER_PROCESS_AUDIOCHANNELS (PLAYER_PROCESS + 9)
 #define PLAYER_PROCESS_AUDIOSAMPLERATE (PLAYER_PROCESS + 10)
 #define PLAYER_PROCESS_AUDIOBITSPERSAMPLE (PLAYER_PROCESS + 11)
+#define PLAYER_PROCESS_VIDEOINTERLACE (PLAYER_PROCESS + 12)
 
 #define WINDOW_PROPERTY             9993
 #define WINDOW_IS_VISIBLE           9995
diff --git a/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp b/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
index 44aa800..3f7bc57 100644
--- a/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
+++ b/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
@@ -312,6 +312,9 @@ bool CPlayerGUIInfo::GetLabel(std::string& value, const CFileItem *item, int con
     case PLAYER_PROCESS_VIDEODAR:
       value = StringUtils::Format("%.2f", CServiceBroker::GetDataCacheCore().GetVideoDAR());
       return true;
+    case PLAYER_PROCESS_VIDEOINTERLACE:
+      value = StringUtils::Format("%s", CServiceBroker::GetDataCacheCore().GetVideoInterlaced() ? "i" : "p");
+      return true;
     case PLAYER_PROCESS_VIDEOWIDTH:
       value = StringUtils::FormatNumber(CServiceBroker::GetDataCacheCore().GetVideoWidth());
       return true;
-- 
2.7.4

